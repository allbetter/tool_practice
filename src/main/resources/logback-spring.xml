<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <!--logback的完整路径，就是配置项需要这个类去处理-->
    <!--配置控制台的输出-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <!--展现形式-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--放具体格式-->
            <pattern>
                %d - %msg%n
            </pattern>
        </layout>
    </appender>

    <!--配置文件info的输出-->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--过滤配置，级别过滤，LevelFilter.FilterReply有三个枚举：
        public enum FilterReply {
            DENY,
            NEUTRAL,  //会忽略info这个filter这条规则，走到error这条规则
            ACCEPT;  //被info这个filter这条规则接受处理
        ...
        }
        -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--如果还是用ERROR的ThresholdFilter话，因为ERROR的级别比INFO高，所以还是会输出ERROR-->
            <level>ERROR</level>
            <!--如果匹配到匹配到ERROR就禁止掉-->
            <onMatch>DENY</onMatch>
            <!--没有命中就使用这条规则-->
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <!--展现形式-->
        <encoder>
            <!--放具体格式-->
            <pattern>
                %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>./log/info.%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>

    <!--配置文件error的输出-->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--过滤配置，根据范围来过滤-->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <!--展现形式-->
        <encoder>
            <!--放具体格式-->
            <pattern>
                %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>./log/error.%d.log</fileNamePattern>
        </rollingPolicy>
    </appender>



    <!--配置项用去哪，放在root下面，整个项目都适用，再设定级别-->
    <root level="info">
        <!--ref是上面appender节点的name的值-->
        <appender-ref ref="consoleLog" />
        <appender-ref ref="fileInfoLog" />
        <appender-ref ref="fileErrorLog" />
    </root>
</configuration>